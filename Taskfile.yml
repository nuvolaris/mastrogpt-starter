version: '3'

dotenv:
- .env

vars:
    DRY: ""
    SKIP: ""
    FLAGS: ""

tasks:
    default: task -l

    build:venv:
        requires: { vars: [A] }
        cmds:
        -   >
            bash util/build-venv.sh 
            $(pwd)/packages/{{.A}}/requirements.txt
            $(pwd)/packages/{{.A}}.zip
        - task: build:action
        sources:
        - "packages/{{.A}}/requirements.txt"
        generates:
        - "packages/{{.A}}.zip"

    build:action:
        aliases: [b]
        requires: { vars: [A] }
        cmds:
        -   |
            FILE=$(basename "{{.A}}")
            cd packages/{{.A}}
            zip ../$FILE.zip * -r  -x requirements.txt 
        sources:
        - packages/{{.A}}/*
        generates:
        - packages/{{.A}}.zip

    buildreload:action:
        aliases: [bR]
        requires: { vars: [A] }
        cmds:
        -   |
            FILE=$(basename "{{.A}}")
            cd packages/{{.A}}
            zip ../$FILE.zip  * -x requirements.txt 
        sources:
        - packages/{{.A}}/*
        generates:
        - packages/{{.A}}.zip

    clean:
        ignore_error: true
        cmds:
        - rm -v packages/*/*.zip

    setup: 
        desc: setup Nuvolaris MastroGPT
        cmds:
        -   |
            nuv -version
            for i in packages/*/*/requirements.txt; do
                pip install -r "$i"
            done
            task config


    cli: |
        ipython -i util/init.ipy
    
    serve:
        aliases: [s]
        ignore_error: true
        cmds:
        - bash util/http-serve.sh 
        - echo "Terminated or another server started..."
        
    deploy:
        desc: deploy actions
        cmds:
        - python -m util.deploy {{.FLAGS}}
        - nuv web upload web
        - echo "Deployed on:" "$NUVDEV_HOST"

    undeploy:
        ignore_error: true
        desc: undeploy actions
        cmds:
        - task: clean
        - >
            nuv action list | awk 'NR>1 t{ print $1}' | xargs -L1 -r nuv action delete
        - >
            nuv package list | awk 'NR>1 t{ print $1}' | xargs -L1 -r nuv package delete
 
    devel:
        desc: incremental interactive development mode
        cmds:
        - task: undeploy
        - python -m util.deploy -w {{.FLAGS}}
        
    config:
        desc: configure Nuvolaris MastroGPT
        silent: true
        cmds:
        -   |
            while ! test -e ~/.wskprops
            do
                echo "*** Configuring Access to nuvolaris.dev with OpenAI ***"
                echo -n "Enter Username: "
                read NUVDEV_USERNAME
                if nuv -login https://nuvolaris.dev "$NUVDEV_USERNAME"
                then 
                    source ~/.wskprops
                    echo "NUVDEV_USERNAME=$NUVDEV_USERNAME" >.env
                    echo "NUVDEV_HOST=https://$NUVDEV_USERNAME.nuvolaris.dev" >>.env
                    echo "OPENAI_API_HOST=https://openai.nuvolaris.io" >>.env
                    echo "$AUTH" | awk -F: '{print "OPENAI_API_KEY=" $1 }' >>.env
                fi
            done
            echo "**************************************************************************************"
            echo "*** Type 'deploy' to deploy your app to https://$NUVDEV_USERNAME.nuvolaris.dev"
            echo "*** Type 'devel'  to enter incremental development mode"
            echo "**************************************************************************************"



